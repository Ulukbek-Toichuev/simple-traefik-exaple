services:
  core:
    image: fireflyiii/core:latest
    hostname: core
    container_name: core_firefly_iii
    networks:
      - firefly_iii
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.core_firefly.rule=Host(`core.firefly.localhost`)"
      - "traefik.http.routers.core_firefly.entrypoints=websecure"
      - "traefik.http.routers.core_firefly.tls=true"
    depends_on:
      - postgres
      - redis

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    container_name: importer_firefly_iii
    networks:
      - firefly_iii
    env_file: .importer.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.importer_firefly.rule=Host(`importer.firefly.localhost`)"
      - "traefik.http.routers.importer_firefly.entrypoints=websecure_importer"
      - "traefik.http.routers.importer_firefly.tls=true"
    depends_on:
      - core

  cron:
    image: alpine
    container_name: cron_firefly_iii
    restart: always
    command: sh -c "
      apk add --no-cache tzdata &&
      ln -sf /usr/share/zoneinfo/$${TZ} /etc/localtime &&
      echo '0 3 * * * wget -qO- http://core:8080/api/v1/cron/2abd20113843f762589fdbc1e7ad2d60' | crontab - &&
      crond -f -L /dev/stdout"
    networks:
      - firefly_iii
    environment:
      - TZ=Europe/Moscow

  postgres:
    image: postgres:15-alpine
    hostname: postgres
    container_name: postgres_firefly_iii
    restart: always
    env_file: .db.env
    networks:
      - firefly_iii
    ports:
      - '5432:5432'
    volumes:
      - firefly_iii_db:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    hostname: redis
    container_name: redis_firefly_iii
    restart: always
    networks:
      - firefly_iii
    ports:
      - '6379:6379'
    volumes:
      - firefly_iii_cache:/data

  traefik:
    image: "traefik:v3.3"
    container_name: "traefik_firefly_iii"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik_firefly.rule=Host(`traefik.firefly.localhost`)"
      - "traefik.http.routers.traefik_firefly.entrypoints=webtraefik"
    ports:
      - "80:80"
      - "8081:8080"
      - "443:443"
      - "444:444"
    command: --configFile=/etc/traefik/traefik.yml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./dynamic.yml:/etc/traefik/dynamic.yml
      - ./certs:/etc/traefik/certs
    networks:
      - firefly_iii

volumes:
   firefly_iii_upload:
   firefly_iii_db:
   firefly_iii_cache:

networks:
  firefly_iii:
    driver: bridge